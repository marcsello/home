#!/bin/bash

if ! command -v curl >/dev/null; then
	echo "curl is not installed!"
	exit 2
fi

sources=("https://github.com/marcsello.keys" "https://gitlab.com/marcsello.keys")
authorized_keys="/home/marcsello/.ssh/authorized_keys"

mkdir -p /home/marcsello/.ssh # make sure the .ssh folder exists
tmpfile=$(mktemp -p "/home/marcsello/.ssh" keysXXXXXXXX)

function cleanup() {
	rm -f "${tmpfile}"
}

trap cleanup EXIT

# Try to download a valid keys file
download_success="0"
for source in "${sources[@]}"; do

	echo "Trying ${source}..."
	curl -s -m 60 --fail --fail-early -o "${tmpfile}" "${source}" || continue

	if ssh-keygen -lf "${tmpfile}" >/dev/null; then
		echo "Downloaded keys are valid..."
		download_success="1"
		break # success
	else
		echo "Downloaded keys are invalid!"
	fi

done

# exit on failure
if [[ "$download_success" -ne "1" ]]; then
	echo "Could not download public keys!"
	exit 1
fi

# Compile authorized_keys file
(
	echo "# Synchronized keys:"
	cat "${tmpfile}"
	if [[ -f "${authorized_keys}.local" ]]; then
		echo "# Locally added keys:"
		cat "${authorized_keys}.local"
	fi

) > "${authorized_keys}"

# Ensure correct permissions
chmod 600 "$authorized_keys"
echo "Done!"
